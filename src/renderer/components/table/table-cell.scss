/**
 * Copyright (c) 2021 OpenLens Authors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

.TableCell {
  padding: $padding;
  word-break: break-all;
  overflow: hidden;
  text-overflow: ellipsis;

  &.checkbox {
    display: flex;
    flex: 0 0 32px !important;
    padding-left: 0;
    padding-right: 0;

    &:not(.disabled) {
      cursor: pointer;
    }

    > .Checkbox {
      margin: 1px auto;
    }
  }

  // fix: don't hide "sortIcon" when used with <TableHead nowrap> and there is not enough space to show all the content
  &.sorting.nowrap {
    display: flex;
    align-items: center;

    > * {
      flex-shrink: 0;
    }

    > .content {
      flex-shrink: 1;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    > .sortIcon {
      margin: 0;
    }
  }

  .Table.sortable > .TableHead & {
    user-select: none;
    white-space: nowrap;

    &.sorting {
      cursor: pointer;
    }

    .sortIcon {
      transition: 350ms opacity;
      opacity: .3;

      &.enabled {
        opacity: 1;
      }
    }
  }

  a {
    color: $primary;
    transition: 150ms color;

    &:hover {
      color: $textColorAccent;
    }
  }
}